apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-service-deployment
  namespace: demo-app
  labels:
    app: demo-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: demo-service
  template:
    metadata:
      labels:
        app: demo-service
    spec:
      containers:
      # Spring Boot application container
      - name: demo-service
        image: demo-service:latest
        ports:
        - containerPort: 8081
          name: http
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "openshift"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 5

      # Envoy sidecar container
      - name: envoy-proxy
        image: envoy-proxy:latest
        ports:
        - containerPort: 8080
          name: proxy-http
        - containerPort: 8082
          name: egress-http
        - containerPort: 9901
          name: admin
        envFrom:
        - configMapRef:
            name: envoy-config
        env:
        - name: OAUTH2_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: envoy-secrets
              key: oauth2_client_secret
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /ready
            port: 9901
          initialDelaySeconds: 15
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 9901
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: demo-service-service
  namespace: demo-app
  labels:
    app: demo-service
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: demo-service
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: demo-service-route
  namespace: demo-app
  labels:
    app: demo-service
spec:
  to:
    kind: Service
    name: demo-service-service
  port:
    targetPort: http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
