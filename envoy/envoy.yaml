admin:
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9901

static_resources:
  listeners:
  # Incoming proxy listener (handles incoming requests with JWT validation)
  - name: listener_incoming
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          http_filters:
          # JWT Authentication filter
          - name: envoy.filters.http.jwt_authn
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
              providers:
                entraid_provider:
                  issuer: "${ENTRAID_ISSUER}"
                  audiences:
                  - "${ENTRAID_AUDIENCE}"
                  remote_jwks:
                    http_uri:
                      uri: "${ENTRAID_JWKS_URI}"
                      cluster: entraid_jwks_cluster
                      timeout: 5s
                    cache_duration: 300s
              rules:
              - match:
                  prefix: "/"
                requires:
                  provider_name: "entraid_provider"
          # Router filter (must be last)
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: spring_boot_service

  # Outgoing proxy listener (handles outbound requests from Spring Boot)
  - name: listener_outgoing
    address:
      socket_address:
        protocol: TCP
        address: 127.0.0.1
        port_value: 8082
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: egress_http
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          http_filters:
          # OAuth2 filter for outgoing requests
          - name: envoy.filters.http.oauth2
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.oauth2.v3.OAuth2
              config:
                token_endpoint:
                  cluster: oauth2_token_cluster
                  uri: "${ENTRAID_TOKEN_ENDPOINT}"
                  timeout: 30s
                authorization_endpoint: "${ENTRAID_AUTH_ENDPOINT}"
                redirect_uri: "http://localhost:8080/oauth2/callback"
                redirect_path_matcher:
                  path:
                    exact: "/oauth2/callback"
                signout_path:
                  path:
                    exact: "/oauth2/signout"
                credentials:
                  client_id: "${OAUTH2_CLIENT_ID}"
                  client_secret:
                    name: "oauth2_client_secret"
                auth_scopes:
                - "openid"
                - "profile"
                - "${DOWNSTREAM_API_SCOPE}"
          # Router filter
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          route_config:
            name: outgoing_route
            virtual_hosts:
            - name: downstream_services
              domains: ["*"]
              routes:
              # Route for downstream service 1
              - match:
                  prefix: "/api/v1/downstream-service"
                route:
                  cluster: downstream_service_1
                  prefix_rewrite: "/"
              # Route for downstream service 2 (example)
              - match:
                  prefix: "/api/v2/another-service"
                route:
                  cluster: downstream_service_2
                  prefix_rewrite: "/"

  clusters:
  # Spring Boot service cluster
  - name: spring_boot_service
    connect_timeout: 30s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: spring_boot_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 8081

  # EntraID JWKS cluster
  - name: entraid_jwks_cluster
    connect_timeout: 30s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: entraid_jwks_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: login.microsoftonline.com
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: login.microsoftonline.com

  # OAuth2 token endpoint cluster
  - name: oauth2_token_cluster
    connect_timeout: 30s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: oauth2_token_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: login.microsoftonline.com
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: login.microsoftonline.com

  # Downstream service clusters
  - name: downstream_service_1
    connect_timeout: 30s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: downstream_service_1
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: "${DOWNSTREAM_SERVICE_1_HOST}"
                port_value: "${DOWNSTREAM_SERVICE_1_PORT}"

  - name: downstream_service_2
    connect_timeout: 30s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: downstream_service_2
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: "${DOWNSTREAM_SERVICE_2_HOST}"
                port_value: "${DOWNSTREAM_SERVICE_2_PORT}"
